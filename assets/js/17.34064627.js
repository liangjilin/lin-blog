(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{337:function(t,s,e){"use strict";e.r(s);var a=e(33),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"介紹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介紹"}},[t._v("#")]),t._v(" 介紹")]),t._v(" "),e("p",[t._v("当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。")]),t._v(" "),e("h2",{attrs:{id:"语法索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法索引"}},[t._v("#")]),t._v(" 语法索引")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("declare var")]),t._v(" 声明全局变量")]),t._v(" "),e("li",[e("code",[t._v("declare function")]),t._v(" 声明全局方法")]),t._v(" "),e("li",[e("code",[t._v("declare class")]),t._v(" 声明全局类")]),t._v(" "),e("li",[e("code",[t._v("declare enum")]),t._v(" 声明全局枚举类型")]),t._v(" "),e("li",[e("code",[t._v("declare namespace")]),t._v(" 声明（含有子属性的）全局对象")]),t._v(" "),e("li",[e("code",[t._v("interface")]),t._v(" 和 "),e("code",[t._v("type")]),t._v(" 声明全局类型")]),t._v(" "),e("li",[e("code",[t._v("export")]),t._v(" 导出变量")]),t._v(" "),e("li",[e("code",[t._v("export namespace")]),t._v(" 导出（含有子属性的）对象")]),t._v(" "),e("li",[e("code",[t._v("export default ES6")]),t._v(" 默认导出")]),t._v(" "),e("li",[e("code",[t._v("export = commonjs")]),t._v(" 导出模块")]),t._v(" "),e("li",[e("code",[t._v("export as namespace UMD")]),t._v(" 库声明全局变量")]),t._v(" "),e("li",[e("code",[t._v("declare global")]),t._v(" 扩展全局变量")]),t._v(" "),e("li",[e("code",[t._v("declare module")]),t._v(" 扩展模块")]),t._v(" "),e("li",[e("code",[t._v("///")]),t._v(" "),e("code",[t._v("<reference />")]),t._v(" 三斜线指令")])]),t._v(" "),e("h2",{attrs:{id:"声明语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#声明语句"}},[t._v("#")]),t._v(" 声明语句")]),t._v(" "),e("p",[t._v("如果我們引入了"),e("code",[t._v("jQuery")]),t._v("庫，我們想在 "),e("code",[t._v("TypeScript")]),t._v(" 中使用，但是"),e("code",[t._v("TypeScript")]),t._v("并不知道 "),e("code",[t._v("$")]),t._v(" 或 "),e("code",[t._v("jQuery")]),t._v(" 是什么东西：")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("jQuery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ERROR: Cannot find name 'jQuery'.")]),t._v("\n")])])]),e("p",[t._v("这时，我们需要使用 "),e("code",[t._v("declare var")]),t._v(" 来定义它的类型：")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jQuery")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("jQuery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("font",{attrs:{color:"fa9003"}},[t._v("注意：")]),e("code",[t._v("declare var")]),t._v(" 并没有真的定义一个变量，只是定义了全局变量 jQuery 的类型，仅仅会用于编译时的检查，在编译结果中会被删除。")],1),t._v(" "),e("h2",{attrs:{id:"声明文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#声明文件"}},[t._v("#")]),t._v(" 声明文件")]),t._v(" "),e("p",[t._v("通常我们会把声明语句放到一个单独的文件（"),e("code",[t._v("jQuery.d.ts")]),t._v("）中，这就是声明文件：")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/jQuery.d.ts")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jQuery")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("font",{attrs:{color:"fa9003"}},[t._v("注意：")]),t._v("声明文件必需以 "),e("code",[t._v(".d.ts")]),t._v(" 为后缀。")],1),t._v(" "),e("p",[e("strong",[t._v("第三方声明文件")])]),t._v(" "),e("p",[t._v("推荐的是使用 "),e("code",[t._v("@types")]),t._v(" 统一管理第三方库的声明文件。\n"),e("code",[t._v("@types")]),t._v(" 的使用方式很简单:")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("npm install @types"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("jquery "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n")])])]),e("p",[t._v("可以在"),e("a",{attrs:{href:"https://microsoft.github.io/TypeSearch/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个页面"),e("OutboundLink")],1),t._v("搜索你需要的声明文件。")]),t._v(" "),e("h2",{attrs:{id:"书写声明文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#书写声明文件"}},[t._v("#")]),t._v(" 书写声明文件")]),t._v(" "),e("p",[t._v("当一个第三方库没有提供声明文件时，我们就需要自己书写声明文件了。")]),t._v(" "),e("p",[t._v("声明文件或模块的语法格式如下：")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" Module_Name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("TypeScript 引入声明文件语法格式：")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <reference path = " runoob.d.ts" />')]),t._v("\n")])])]),e("h3",{attrs:{id:"全局变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),e("p",[t._v("全局变量的声明文件主要有以下几种语法：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("declare var")]),t._v(" 声明全局变量")]),t._v(" "),e("li",[e("code",[t._v("declare function")]),t._v(" 声明全局方法")]),t._v(" "),e("li",[e("code",[t._v("declare class")]),t._v(" 声明全局类")]),t._v(" "),e("li",[e("code",[t._v("declare enum")]),t._v(" 声明全局枚举类型")]),t._v(" "),e("li",[e("code",[t._v("declare namespace")]),t._v(" 声明（含有子属性的）全局对象")]),t._v(" "),e("li",[e("code",[t._v("interface")]),t._v(" 和 "),e("code",[t._v("type")]),t._v(" 声明全局类型")])]),t._v(" "),e("h3",{attrs:{id:"npm-包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-包"}},[t._v("#")]),t._v(" npm 包")]),t._v(" "),e("p",[t._v("npm 包的声明文件主要有以下几种语法：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("export")]),t._v(" 导出变量")]),t._v(" "),e("li",[e("code",[t._v("export namespace")]),t._v(" 导出（含有子属性的）对象")]),t._v(" "),e("li",[e("code",[t._v("export default ES6")]),t._v(" 默认导出")]),t._v(" "),e("li",[e("code",[t._v("export = commonjs")]),t._v(" 导出模块")])]),t._v(" "),e("h3",{attrs:{id:"umd-库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umd-库"}},[t._v("#")]),t._v(" UMD 库")]),t._v(" "),e("p",[t._v("既可以通过 "),e("code",[t._v("<script>")]),t._v(" 标签引入，又可以通过 "),e("code",[t._v("import")]),t._v(" 导入的库，称为 "),e("code",[t._v("UMD")]),t._v(" 库。\n相比于 "),e("code",[t._v("npm")]),t._v(" 包的类型声明文件，我们需要额外声明一个全局变量，为了实现这种方式，"),e("code",[t._v("ts")]),t._v(" 提供了一个新语法 "),e("code",[t._v("export as namespace")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"发布声明文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布声明文件"}},[t._v("#")]),t._v(" 发布声明文件")]),t._v(" "),e("p",[t._v("发布声明文件有两种方案：")]),t._v(" "),e("ul",[e("li",[t._v("将声明文件和源码放在一起")]),t._v(" "),e("li",[t._v("将声明文件发布到 "),e("code",[t._v("@types")]),t._v(" 下")])]),t._v(" "),e("h3",{attrs:{id:"将声明文件和源码放在一起"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将声明文件和源码放在一起"}},[t._v("#")]),t._v(" 将声明文件和源码放在一起")]),t._v(" "),e("p",[t._v("tsc 自动生成的:\n无需做任何其他配置，只需要把编译好的文件也发布到 npm 上，使用方就可以获取到类型提示了。")]),t._v(" "),e("p",[t._v("手动写的声明文件，那么需要满足以下条件之一，才能被正确的识别：")]),t._v(" "),e("ul",[e("li",[t._v("给 "),e("code",[t._v("package.json")]),t._v(" 中的 "),e("code",[t._v("types")]),t._v(" 或 "),e("code",[t._v("typings")]),t._v(" 字段指定一个类型声明文件地址")]),t._v(" "),e("li",[t._v("在项目根目录下，编写一个 "),e("code",[t._v("index.d.ts")]),t._v(" 文件")]),t._v(" "),e("li",[t._v("针对入口文件（"),e("code",[t._v("package.json")]),t._v(" 中的 "),e("code",[t._v("main")]),t._v(" 字段指定的入口文件），编写一个同名不同后缀的 "),e("code",[t._v(".d.ts")]),t._v(" 文件")])]),t._v(" "),e("p",[t._v("给 "),e("code",[t._v("package.json")]),t._v(" 中的 "),e("code",[t._v("types")]),t._v(" 或 "),e("code",[t._v("typings")]),t._v(" 字段指定一个类型声明文件地址:")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib/index.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"types"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo.d.ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("指定了 "),e("code",[t._v("types")]),t._v(" 为 "),e("code",[t._v("foo.d.ts")]),t._v(" 之后，导入此库的时候，就会去找 "),e("code",[t._v("foo.d.ts")]),t._v(" 作为此库的类型声明文件了。\n如果没有指定 "),e("code",[t._v("types")]),t._v(" 或 "),e("code",[t._v("typings")]),t._v("，那么就会在根目录下寻找 "),e("code",[t._v("index.d.ts")]),t._v(" 文件，将它视为此库的类型声明文件。")]),t._v(" "),e("p",[t._v("如果没有找到 "),e("code",[t._v("index.d.ts")]),t._v(" 文件，那么就会寻找入口文件（"),e("code",[t._v("package.json")]),t._v(" 中的 "),e("code",[t._v("main")]),t._v(" 字段指定的入口文件）是否存在对应同名不同后缀的 "),e("code",[t._v(".d.ts")]),t._v(" 文件:")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib/index.js"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"将声明文件发布到-types-下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将声明文件发布到-types-下"}},[t._v("#")]),t._v(" 将声明文件发布到 "),e("code",[t._v("@types")]),t._v(" 下")]),t._v(" "),e("p",[t._v("要将声明文件发布到 "),e("code",[t._v("@types")]),t._v(" 下，就需要给 "),e("a",{attrs:{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DefinitelyTyped"),e("OutboundLink")],1),t._v(" 创建一个 "),e("code",[t._v("pull-request")]),t._v("，其中包含了类型声明文件，测试代码，以及 "),e("code",[t._v("tsconfig.json")]),t._v(" 等。")]),t._v(" "),e("p",[t._v("如果大家需要将声明文件发布到 "),e("code",[t._v("@types")]),t._v(" 下，可以参考"),e("a",{attrs:{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30336/files",target:"_blank",rel:"noopener noreferrer"}},[t._v("提交的 pull-request"),e("OutboundLink")],1),t._v(" 。")])])}),[],!1,null,null,null);s.default=r.exports}}]);